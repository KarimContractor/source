// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication10.Models;

namespace WebApplication10.Migrations
{
    [DbContext(typeof(context))]
    [Migration("20190129123147_abctesting")]
    partial class abctesting
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebApplication10.Models.Customers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<DateTime>("Customerfrom");

                    b.Property<string>("Name");

                    b.Property<string>("Rating");

                    b.HasKey("Id");

                    b.ToTable("customer");
                });

            modelBuilder.Entity("WebApplication10.Models.Logs", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("Password")
                        .IsRequired();

                    b.Property<string>("Previlages")
                        .IsRequired();

                    b.Property<string>("UserName")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("log");
                });

            modelBuilder.Entity("WebApplication10.Models.Payables", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ProvidersID");

                    b.Property<int>("PurchasesID");

                    b.Property<int>("SlipNo");

                    b.Property<string>("Status");

                    b.Property<DateTime>("dateadd");

                    b.Property<DateTime?>("updatedate");

                    b.HasKey("Id");

                    b.ToTable("Payable");
                });

            modelBuilder.Entity("WebApplication10.Models.Providers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<DateTime>("Membersfrom");

                    b.Property<string>("Name");

                    b.Property<string>("Rating");

                    b.Property<string>("Review");

                    b.HasKey("Id");

                    b.ToTable("Provider");
                });

            modelBuilder.Entity("WebApplication10.Models.Purchases", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Category");

                    b.Property<string>("Name");

                    b.Property<int>("Price");

                    b.Property<int>("ProviderId");

                    b.Property<int>("Quantity");

                    b.HasKey("id");

                    b.ToTable("Purchase");
                });

            modelBuilder.Entity("WebApplication10.Models.Recivables", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CustomerID");

                    b.Property<int>("SalesID");

                    b.Property<int>("SlipNo");

                    b.Property<string>("Status");

                    b.Property<DateTime>("dateadd");

                    b.Property<DateTime?>("updatedate");

                    b.HasKey("Id");

                    b.ToTable("Recivable");
                });

            modelBuilder.Entity("WebApplication10.Models.Sales", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Category");

                    b.Property<int>("CustomerId");

                    b.Property<string>("Name");

                    b.Property<int>("Price");

                    b.Property<int>("Quantity");

                    b.HasKey("id");

                    b.ToTable("Sale");
                });

            modelBuilder.Entity("WebApplication10.Models.Stock", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Category");

                    b.Property<string>("Name");

                    b.Property<int>("Quantity");

                    b.Property<int>("UnitPriceavg");

                    b.HasKey("id");

                    b.ToTable("Stocks");
                });
#pragma warning restore 612, 618
        }
    }
}
